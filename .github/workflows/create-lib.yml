name: Create NX lib

on:
  workflow_dispatch:
    inputs:
      lib_name:
        description: 'Name of the new lib'
        required: true
        type: string
      task_number:
        description: 'Task/ticket number'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  create-lib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }} # Use PAT for checkout

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Create and switch to new branch
        run: |
          sudo apt-get update
          sudo apt-get install -y git
          git checkout -b ${{ github.event.inputs.task_number }}-create-${{ github.event.inputs.lib_name }}

      - name: Generate lib
        run: npx nx g @nx/react:library libs/${{ github.event.inputs.lib_name }} --unitTestRunner=vitest --bundler=none

      - name: Create catalog info
        run: |
          # Ensure the library directory exists
          mkdir -p libs/${{ github.event.inputs.lib_name }}

          # Create the catalog-info.yaml file
          cat > libs/${{ github.event.inputs.lib_name }}/catalog-info.yaml << 'EOL'
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ github.event.inputs.lib_name }}
            title: ${{ github.event.inputs.lib_name }}
            description: NX library generated from template
            annotations:
              github.com/project-slug: ${{ github.repository }}
              backstage.io/techdocs-ref: dir:.
            tags:
              - nx
              - library
              - react
          spec:
            type: library
            lifecycle: experimental
            owner: user:guest
            system: nx-monorepo
            framework: react
          EOL

          # Verify the file was created
          ls -la libs/${{ github.event.inputs.lib_name }}/catalog-info.yaml

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "${{ github.event.inputs.task_number }} Create lib ${{ github.event.inputs.lib_name }}"
          git push origin ${{ github.event.inputs.task_number }}-create-${{ github.event.inputs.lib_name }} --force

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }} # Use PAT for PR creation
        run: |
          gh pr create \
            --title "${{ github.event.inputs.task_number }} Create lib ${{ github.event.inputs.lib_name }}" \
            --base main \
            --head "${{ github.event.inputs.task_number }}-create-${{ github.event.inputs.lib_name }}"
